variables:
  CONTAINER_IMAGE: ${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}

stages:
  - test
  - package
  - test-package
  - upload

.tox: &tox
  before_script:
    - pip install tox
  image: python:3.9
  script:
    - tox -e ${TOXENV:-$CI_JOB_NAME}
  stage: test

flake8:
  <<: *tox

py3:
  <<: *tox
  artifacts:
    paths:
      - coverage.xml
      - xunit.xml

bookworm:
  <<: *tox

postgresql:
  <<: *tox
  services:
    - postgres:12.2-alpine
  variables:
    TOXENV: py3
    TEST_DATABASE_URI: "postgresql://admin@postgres/test"
    POSTGRES_DB: test
    POSTGRES_USER: admin
    POSTGRES_PASSWORD: ""
    POSTGRES_HOST_AUTH_METHOD: trust

sonar:
  allow_failure: true
  image: sonarsource/sonar-scanner-cli
  needs:
    - py3
  script:
    - sonar-scanner -X -Dsonar.python.coverage.reportPath=coverage.xml -Dsonar.python.xunit.reportPath=xunit.xml -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.projectVersion=$(git describe) -Dsonar.exclusions=**/test_*.py,setup.py -Dsonar.qualitygate.wait=true
  stage: test
  variables:
    SONAR_PROJECT_BASE_DIR: "${CI_PROJECT_DIR}"

package:deb:
  stage: package
  needs: []
  image: buildpack-deps:$DIST
  parallel:
    matrix:
      - DIST: [bookworm]
  script: |
    set -x
    set -e
    apt update
    apt -y --no-install-recommends install devscripts
    export VERSION=$(curl -L https://gitlab.com/ikus-soft/maven-scm-version/-/raw/master/version.sh 2>/dev/null | bash -s DEB)
    apt build-dep -y .
    dch -v "$VERSION" "automated build"
    dpkg-buildpackage -b
    mkdir -p ./dist/$DIST
    mv ../udb*.deb ./dist/$DIST/
  artifacts:
    paths:
      - ./dist/*

package:docker:
  image: docker:20
  needs: []
  script:
    - docker --version
    - docker build -t ${CONTAINER_IMAGE} .
  stage: package
  services:
    - name: docker:20-dind

test-package:deb:
  stage: test-package
  image: buildpack-deps:$DIST
  needs: ["package:deb"]
  parallel:
    matrix:
      - DIST: [bookworm]
  script:
    - apt update && apt install -y ./dist/$DIST/udb*.deb
    - udb --version
    - (/usr/bin/udb &)
    - apt install -y curl
    - curl http://localhost:8080

upload:deb:
  needs:
    - package:deb
  only:
    variables:
      - $NEXUS_USR
      - $NEXUS_PWD
  parallel:
    matrix:
      - DIST: [bookworm]
  script: |
    set -e
    set -x
    if [[ "$CI_COMMIT_TAG" == *.+([0-9]) ]]; then
      APT_URL="$NEXUS_URL/repository/apt-release-${DIST}/"
    else
      APT_URL="$NEXUS_URL/repository/apt-dev-${DIST}/"
    fi
    export FILE=$(ls -1 ./dist/$DIST/udb*.deb)
    curl --fail -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$FILE" "$APT_URL"
    sleep 2
    curl --fail ${APT_URL}/dists/$DIST/main/binary-all/Packages | grep "$(basename $FILE)"
  stage: upload
